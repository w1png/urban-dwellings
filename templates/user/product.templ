package user_templates

import "github.com/w1png/go-htmx-ecommerce-template/models"
import "fmt"
import "github.com/w1png/go-htmx-ecommerce-template/templates/components"
import "github.com/w1png/go-htmx-ecommerce-template/templates/scripts"
import "github.com/w1png/go-htmx-ecommerce-template/file_storage"

script ParseProductDescription(description string) {
  document.getElementById("description").innerHTML = DOMPurify.sanitize(marked.parse(description));;
}

templ productPage(product *models.Product, cart_product *models.CartProduct) {
	@Navbar()
	<div
		class="container mx-auto h-screen mt-16 py-4 sample-transition flex flex-col lg:flex-row gap-10 overflow-x-hidden"
		hx-target="body"
		hx-swap="outerHTML transition:true"
		hx-boost="true"
	>
		<div class="w-full lg:w-1/2 aspect-square">
			<img
				class="object-contain w-full aspect-square rounded-xl"
				src={ file_storage.ObjectStorageId(product.Image).GetUrl("image", "webp") }
			/>
		</div>
		<div class="grow flex flex-col gap-4">
			<h1 class="text-4xl font-bold">{ product.Title }</h1>
			<div class="flex flex-row gap-2">
				<h3 class="text-2xl">{ fmt.Sprintf("%d", product.Price) }₽</h3>
			</div>
			@components.AddToCartButton(product.ID, cart_product.Quantity)
			<p class="text-2xl font-bold">Описание</p>
			<p class="prose whitespace-pre-wrap">
				{ product.Description }
			</p>
		</div>
	</div>
}

templ Product(product *models.Product, cart_product *models.CartProduct) {
	@Base(product.Title) {
		@productPage(product, cart_product)
	}
}

templ ProductApi(product *models.Product, cart_product *models.CartProduct) {
	@scripts.SetTitle(product.Title)
	@Navbar()
	@productPage(product, cart_product)
}
